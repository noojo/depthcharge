// instrument by jscoverage, do not modifly this file
(function () {
  var BASE;
  if (typeof global === 'object') {
    BASE = global;
  } else if (typeof window === 'object') {
    BASE = window;
  } else {
    throw new Error('[jscoverage] unknow ENV!');
  }
  if (!BASE._$jscoverage) {
    BASE._$jscoverage = {};
    BASE._$jscoverage_cond = {};
    BASE._$jscoverage_done = function (file, line, express) {
      if (arguments.length === 2) {
        BASE._$jscoverage[file][line] ++;
      } else {
        BASE._$jscoverage_cond[file][line] ++;
        return express;
      }
    };
    BASE._$jscoverage_init = function (base, file, lines) {
      var tmp = [];
      for (var i = 0; i < lines.length; i ++) {
        tmp[lines[i]] = 0;
      }
      base[file] = tmp;
    };
  }
})();
_$jscoverage_init(_$jscoverage, "lib/registry.js",[1,5,6,7,12,13,15,19,20,21,24,27]);
_$jscoverage_init(_$jscoverage_cond, "lib/registry.js",[6,12,20]);
_$jscoverage["lib/registry.js"].source = ["exports = module.exports = {","  instance: {","    values: [],","    getIndex: function(name) {","      for (var i = 0; i < this.values.length; i++) {","        if (this.values[i].name === name) {","          return i;","        }","      }","    },","    set : function(name, value) {","      if (this.get(name) === false) {","        this.values.push({ name: name, value: value });","      } else {","        this.values[this.getIndex(name)].value = value;","      }","    },","    get: function(name) {","      for (var i = 0; i < this.values.length; i++) {","        if (this.values[i].name === name) {","          return this.values[i].value;","        }","      }","      return false;","    },","    reset: function() {","      this.values = [];","    }","  }","};"];
_$jscoverage_done("lib/registry.js", 1);
exports = module.exports = {
    instance: {
        values: [],
        getIndex: function(name) {
            _$jscoverage_done("lib/registry.js", 5);
            for (var i = 0; i < this.values.length; i++) {
                _$jscoverage_done("lib/registry.js", 6);
                if (_$jscoverage_done("lib/registry.js", 6, this.values[i].name === name)) {
                    _$jscoverage_done("lib/registry.js", 7);
                    return i;
                }
            }
        },
        set: function(name, value) {
            _$jscoverage_done("lib/registry.js", 12);
            if (_$jscoverage_done("lib/registry.js", 12, this.get(name) === false)) {
                _$jscoverage_done("lib/registry.js", 13);
                this.values.push({
                    name: name,
                    value: value
                });
            } else {
                _$jscoverage_done("lib/registry.js", 15);
                this.values[this.getIndex(name)].value = value;
            }
        },
        get: function(name) {
            _$jscoverage_done("lib/registry.js", 19);
            for (var i = 0; i < this.values.length; i++) {
                _$jscoverage_done("lib/registry.js", 20);
                if (_$jscoverage_done("lib/registry.js", 20, this.values[i].name === name)) {
                    _$jscoverage_done("lib/registry.js", 21);
                    return this.values[i].value;
                }
            }
            _$jscoverage_done("lib/registry.js", 24);
            return false;
        },
        reset: function() {
            _$jscoverage_done("lib/registry.js", 27);
            this.values = [];
        }
    }
};